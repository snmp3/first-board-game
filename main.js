import { Game } from './core/Game.js';

// –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ª–∞–¥–∫–∏
const DEBUG = true;

function log(...args) {
    if (DEBUG) {
        console.log('[Game Init]', ...args);
    }
}

function error(...args) {
    console.error('[Game Error]', ...args);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function initializeGame() {
    try {
        log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–≥—Ä—ã...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const loadingElement = document.getElementById('loading');
        if (loadingElement) {
            loadingElement.classList.add('active');
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä—É
        log('–°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã...');
        const game = new Game();
        
        log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä—É...');
        await game.initialize();
        
        // –ù–ï –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        setupDebugHandlers(game);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (loadingElement) {
            loadingElement.classList.remove('active');
        }
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.game = game;
        
        log('‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        log('–î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: window.debugGame()');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...');
            window.debugGame?.();
            
            // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–µ–º
            if (window.game && window.game.debugThemesInterface) {
                log('üîç –û—Ç–ª–∞–¥–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–µ–º:');
                const themesDebug = window.game.debugThemesInterface();
                log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∞–¥–∫–∏ —Ç–µ–º:', themesDebug);
            }
        }, 1000);
        
    } catch (error) {
        error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const loadingElement = document.getElementById('loading');
        if (loadingElement) {
            loadingElement.classList.remove('active');
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        const errorElement = document.getElementById('error-display');
        if (errorElement) {
            errorElement.style.display = 'block';
            errorElement.innerHTML = `
                <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä—ã</h3>
                <p><strong>–û—à–∏–±–∫–∞:</strong> ${error.message}</p>
                <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</p>
                <button onclick="location.reload()" class="btn">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            `;
        }
    }
}

// –¢–û–õ–¨–ö–û –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ë–ï–ó –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
function setupDebugHandlers(game) {
    // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    window.debugGame = () => {
        console.log('=== –°–û–°–¢–û–Ø–ù–ò–ï –ò–ì–†–´ ===');
        console.log('–ò–≥—Ä–æ–∫–∏:', game.gameState.players);
        console.log('–¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω:', game.screenManager.getCurrentScreen());
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã:', Array.from(game.screenManager.screens.keys()));
        console.log('EventHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', game.eventHandler.initialized);
        console.log('ScreenManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', game.screenManager.initialized);
        console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ –≤–æ–ø—Ä–æ—Å—ã:', game.questionLoader.loaded);
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:', game.availableSubjects);
        console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–µ–º—ã:', [...game.selectedThemes]);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
        const buttons = ['add-player', 'add-bot', 'start-game', 'reset-game'];
        console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫:');
        buttons.forEach(id => {
            const btn = document.getElementById(id);
            console.log(`  ${id}:`, {
                exists: !!btn,
                disabled: btn?.disabled,
                visible: btn?.style.display !== 'none',
                hasOnClick: !!btn?.onclick,
                eventListeners: btn?._eventListeners || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            });
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–±–æ–∫—Å—ã —Ç–µ–º
        const themeCheckboxes = document.querySelectorAll('input[id^="theme-"]');
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${themeCheckboxes.length} —á–µ–∫–±–æ–∫—Å–æ–≤ —Ç–µ–º:`);
        themeCheckboxes.forEach(cb => {
            console.log(`  ${cb.id}: ${cb.checked ? 'checked' : 'unchecked'} (value: ${cb.value})`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º input –ø–æ–ª—è
        const nameInput = document.getElementById('player-name');
        const botNameInput = document.getElementById('bot-name');
        console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞:');
        console.log(`  player-name: "${nameInput?.value}" (–¥–ª–∏–Ω–∞: ${nameInput?.value?.length || 0})`);
        console.log(`  bot-name: "${botNameInput?.value}" (–¥–ª–∏–Ω–∞: ${botNameInput?.value?.length || 0})`);
        
        return game.getDebugInfo();
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–µ–º
    window.recreateThemesInterface = async () => {
        log('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–µ–º...');
        try {
            await game.createSubjectsInterface();
            log('–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–µ–º –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            game.eventHandler.setupThemeCheckboxes();
            log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
            
            return true;
        } catch (error) {
            error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–µ–º:', error);
            return false;
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–Ω–æ–ø–æ–∫
    window.forceUnlockButtons = () => {
        const buttonIds = ['add-player', 'add-bot', 'reset-game'];
        
        buttonIds.forEach(id => {
            const button = document.getElementById(id);
            if (button) {
                button.disabled = false;
                button.style.pointerEvents = 'auto';
                button.style.opacity = '1';
                log(`–ö–Ω–æ–ø–∫–∞ ${id} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞`);
            }
        });
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
    window.testAddPlayer = (name = '–¢–µ—Å—Ç–æ–≤—ã–π –∏–≥—Ä–æ–∫') => {
        log(`–¢–µ—Å—Ç–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞: ${name}`);
        try {
            const player = game.addPlayer(name, false);
            log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', player);
            return player;
        } catch (error) {
            error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', error);
            return null;
        }
    };
    
    window.testAddBot = (name = '–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç', difficulty = 'medium') => {
        log(`–¢–µ—Å—Ç–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞: ${name} (${difficulty})`);
        try {
            const bot = game.addPlayer(name, true, difficulty);
            log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', bot);
            return bot;
        } catch (error) {
            error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞:', error);
            return null;
        }
    };
    
    log('–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–ë–ï–ó –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π)');
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
log('–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
initializeGame();
