export class ModalManager {
    constructor() {
        this.initialized = false;
        this.currentModal = null;
        this.autoCloseTimer = null;
        this.answerCallback = null;
        this.messageCallback = null;
        this.resultsCallback = null;
        this.debug = true;
    }

    log(...args) {
        if (this.debug) {
            console.log('[ModalManager]', ...args);
        }
    }

    error(...args) {
        console.error('[ModalManager]', ...args);
    }

    initialize() {
        this.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ModalManager...');
        
        this.questionModal = document.getElementById('question-modal');
        this.messageModal = document.getElementById('message-modal');
        this.resultsModal = document.getElementById('results-modal');
        
        if (!this.questionModal || !this.messageModal || !this.resultsModal) {
            this.error('–ù–µ –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM');
            return false;
        }
        
        this.setupEventListeners();
        this.initialized = true;
        this.log('‚úÖ ModalManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        return true;
    }

    setupEventListeners() {
        this.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
        
        const submitAnswerBtn = document.getElementById('submit-answer');
        const skipQuestionBtn = document.getElementById('skip-question');
        const answerInput = document.getElementById('answer-input');
        
        if (submitAnswerBtn) {
            const newSubmitBtn = submitAnswerBtn.cloneNode(true);
            submitAnswerBtn.parentNode.replaceChild(newSubmitBtn, submitAnswerBtn);
            
            newSubmitBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                this.log('üî• –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–û—Ç–≤–µ—Ç–∏—Ç—å"');
                this.submitAnswer();
            });
            this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–≤–µ—Ç–∏—Ç—å" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
        
        if (skipQuestionBtn) {
            const newSkipBtn = skipQuestionBtn.cloneNode(true);
            skipQuestionBtn.parentNode.replaceChild(newSkipBtn, skipQuestionBtn);
            
            newSkipBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                this.log('üî• –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"');
                this.skipQuestion();
            });
            this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
        
        if (answerInput) {
            const newAnswerInput = answerInput.cloneNode(true);
            answerInput.parentNode.replaceChild(newAnswerInput, answerInput);
            
            newAnswerInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    this.log('üî• Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞');
                    this.submitAnswer();
                }
            });
            
            newAnswerInput.addEventListener('input', (e) => {
                if (e.target.style.borderColor === 'rgb(231, 76, 60)') {
                    e.target.style.borderColor = '';
                    e.target.placeholder = '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã)';
                }
            });
            this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–ª—è –≤–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        }
        
        const closeMessageBtn = document.getElementById('close-message');
        if (closeMessageBtn) {
            const newCloseBtn = closeMessageBtn.cloneNode(true);
            closeMessageBtn.parentNode.replaceChild(newCloseBtn, closeMessageBtn);
            
            newCloseBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                this.log('üî• –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "OK" —Å–æ–æ–±—â–µ–Ω–∏—è');
                this.closeCurrentModal();
            });
            this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "OK" —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
        
        const closeResultsBtn = document.getElementById('close-results');
        if (closeResultsBtn) {
            const newCloseResultsBtn = closeResultsBtn.cloneNode(true);
            closeResultsBtn.parentNode.replaceChild(newCloseResultsBtn, closeResultsBtn);
            
            newCloseResultsBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                this.log('üî• –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ó–∞–∫—Ä—ã—Ç—å" —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
                this.closeCurrentModal();
            });
            this.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å" —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
        
        this.questionModal = document.getElementById('question-modal');
        this.messageModal = document.getElementById('message-modal');
        this.resultsModal = document.getElementById('results-modal');
        
        [this.questionModal, this.messageModal, this.resultsModal].forEach(modal => {
            if (modal) {
                modal.addEventListener('click', (e) => {
                    if (e.target === modal) {
                        this.log('üî• –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
                        this.closeCurrentModal();
                    }
                });
            }
        });
        
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.currentModal) {
                this.log('üî• –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Escape');
                this.closeCurrentModal();
            }
        });
        
        this.log('‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    showQuestion(questionText, answerCallback) {
        this.log('üìã –ü–æ–∫–∞–∑ –≤–æ–ø—Ä–æ—Å–∞:', questionText);
        this.log('üìã Callback –ø–µ—Ä–µ–¥–∞–Ω:', !!answerCallback);
        
        this.forceCloseAll();
        
        const questionTextElement = document.getElementById('question-text');
        const answerInput = document.getElementById('answer-input');
        
        if (questionTextElement) {
            questionTextElement.textContent = questionText;
        }
        
        if (answerInput) {
            answerInput.value = '';
            answerInput.placeholder = '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã)';
            answerInput.style.borderColor = '';
        }
        
        this.answerCallback = answerCallback;
        this.log('üìã Callback —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', !!this.answerCallback);
        
        this.showModal(this.questionModal);
        
        setTimeout(() => {
            const currentAnswerInput = document.getElementById('answer-input');
            if (currentAnswerInput) {
                currentAnswerInput.focus();
                this.log('üìã –§–æ–∫—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞');
            }
        }, 100);
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏—è
    showMessage(title, message, callback = null, options = {}) {
        const { 
            autoClose = false, 
            autoCloseDelay = 1000, 
            isBot = false 
        } = options;
        
        this.log(`üí¨ –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: ${title} (–∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ: ${autoClose}, –±–æ—Ç: ${isBot})`);
        
        this.forceCloseAll();
        
        const titleElement = document.getElementById('message-title');
        const messageElement = document.getElementById('message-text');
        
        if (titleElement) {
            titleElement.textContent = title;
        }
        
        if (messageElement) {
            messageElement.innerHTML = message.replace(/\n/g, '<br>');
        }
        
        this.messageCallback = callback;
        this.showModal(this.messageModal);
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ
        if (autoClose) {
            this.log(`üí¨ –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ ${autoCloseDelay}ms`);
            this.autoCloseTimer = setTimeout(() => {
                this.log('üí¨ –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
                this.closeCurrentModal();
            }, autoCloseDelay);
        } else {
            this.log('üí¨ –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –û–¢–ö–õ–Æ–ß–ï–ù–û - –∂–¥–µ–º –∫–ª–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    }

    showResults(resultsHTML, callback = null) {
        this.log('üèÜ –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã');
        
        this.forceCloseAll();
        
        const resultsContent = document.getElementById('results-content');
        if (resultsContent) {
            resultsContent.innerHTML = resultsHTML;
        }
        
        this.resultsCallback = callback;
        this.showModal(this.resultsModal);
    }

    showModal(modal) {
        if (!modal) return false;
        
        this.forceCloseAll();
        
        this.currentModal = modal;
        modal.classList.add('active');
        modal.style.display = 'flex';
        
        document.body.style.overflow = 'hidden';
        
        this.log(`ü™ü –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modal.id} –ø–æ–∫–∞–∑–∞–Ω–æ`);
        
        return true;
    }

    forceCloseAll() {
        if (this.autoCloseTimer) {
            clearTimeout(this.autoCloseTimer);
            this.autoCloseTimer = null;
        }
        
        [this.questionModal, this.messageModal, this.resultsModal].forEach(modal => {
            if (modal) {
                modal.classList.remove('active');
                modal.style.display = 'none';
            }
        });
        
        document.body.style.overflow = '';
        this.currentModal = null;
        
        this.log('üßπ –í—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã');
    }

    closeCurrentModal() {
        if (this.autoCloseTimer) {
            clearTimeout(this.autoCloseTimer);
            this.autoCloseTimer = null;
            this.log('‚è∞ –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏—è –æ—á–∏—â–µ–Ω');
        }
        
        if (!this.currentModal) return;
        
        const currentModalId = this.currentModal.id;
        
        this.currentModal.classList.remove('active');
        this.currentModal.style.display = 'none';
        
        document.body.style.overflow = '';
        
        if (this.currentModal === this.messageModal && this.messageCallback) {
            const callback = this.messageCallback;
            this.messageCallback = null;
            this.currentModal = null;
            this.log(`üí¨ –í—ã–ø–æ–ª–Ω—è–µ–º callback —Å–æ–æ–±—â–µ–Ω–∏—è`);
            callback();
        } else if (this.currentModal === this.resultsModal && this.resultsCallback) {
            const callback = this.resultsCallback;
            this.resultsCallback = null;
            this.currentModal = null;
            this.log(`üèÜ –í—ã–ø–æ–ª–Ω—è–µ–º callback —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
            callback();
        } else {
            this.currentModal = null;
        }
        
        this.log(`ü™ü –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${currentModalId} –∑–∞–∫—Ä—ã—Ç–æ`);
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    submitAnswer() {
        this.log('üì§ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞...');
        
        const answerInput = document.getElementById('answer-input');
        if (!answerInput) {
            this.error('‚ùå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        if (!this.answerCallback) {
            this.error('‚ùå Callback –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            return;
        }
        
        const answer = answerInput.value.trim();
        this.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç: "${answer}"`);
        
        if (answer === '') {
            this.log('‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ');
            answerInput.placeholder = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç';
            answerInput.style.borderColor = '#e74c3c';
            answerInput.focus();
            return;
        }
        
        const callback = this.answerCallback;
        this.answerCallback = null;
        
        // –í–ê–ñ–ù–û: –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –î–û –≤—ã–∑–æ–≤–∞ callback
        this.currentModal.classList.remove('active');
        this.currentModal.style.display = 'none';
        document.body.style.overflow = '';
        this.currentModal = null;
        
        this.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: "${answer}"`);
        
        setTimeout(() => {
            this.log(`üìû –í—ã–∑—ã–≤–∞–µ–º callback —Å –æ—Ç–≤–µ—Ç–æ–º: "${answer}"`);
            callback(answer);
        }, 50);
    }

    skipQuestion() {
        this.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ –≤–æ–ø—Ä–æ—Å–∞');
        
        const callback = this.answerCallback;
        this.answerCallback = null;
        
        if (this.currentModal) {
            this.currentModal.classList.remove('active');
            this.currentModal.style.display = 'none';
            document.body.style.overflow = '';
            this.currentModal = null;
        }
        
        if (callback) {
            setTimeout(() => {
                this.log('üìû –í—ã–∑—ã–≤–∞–µ–º callback —Å –ø—É—Å—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º (–ø—Ä–æ–ø—É—Å–∫)');
                callback('');
            }, 50);
        }
    }

    isOpen() {
        return this.currentModal !== null;
    }

    getCurrentModal() {
        return this.currentModal;
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    showSuccessMessage(message, callback = null, autoClose = true) {
        this.showMessage(
            '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ', 
            message, 
            callback, 
            { autoClose, autoCloseDelay: 1000 }
        );
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –ù–ï –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    showErrorMessage(message, callback = null, autoClose = false) {
        this.showMessage(
            '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ üòî', 
            message, 
            callback, 
            { autoClose: false } // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ
        );
    }

    showBotMessage(title, message, callback = null) {
        this.showMessage(
            title, 
            message, 
            callback, 
            { autoClose: true, autoCloseDelay: 1000, isBot: true }
        );
    }

    showInfoMessage(title, message, callback = null) {
        this.showMessage(title, message, callback, { autoClose: false });
    }

    getDebugInfo() {
        return {
            initialized: this.initialized,
            currentModal: this.currentModal?.id || null,
            hasAutoCloseTimer: !!this.autoCloseTimer,
            hasAnswerCallback: !!this.answerCallback,
            hasMessageCallback: !!this.messageCallback,
            hasResultsCallback: !!this.resultsCallback,
            modalStates: {
                question: this.questionModal?.classList.contains('active') || false,
                message: this.messageModal?.classList.contains('active') || false,
                results: this.resultsModal?.classList.contains('active') || false
            },
            elementStates: {
                submitButton: !!document.getElementById('submit-answer'),
                skipButton: !!document.getElementById('skip-question'),
                answerInput: !!document.getElementById('answer-input'),
                closeMessageButton: !!document.getElementById('close-message'),
                closeResultsButton: !!document.getElementById('close-results')
            }
        };
    }

    emergencyReset() {
        this.log('üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –°–ë–†–û–° ModalManager');
        
        this.forceCloseAll();
        
        this.answerCallback = null;
        this.messageCallback = null;
        this.resultsCallback = null;
        
        setTimeout(() => {
            this.setupEventListeners();
            this.log('‚úÖ ModalManager —Å–±—Ä–æ—à–µ–Ω –∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }, 100);
    }

    testSubmitButton() {
        this.log('üß™ –¢–ï–°–¢ –ö–ù–û–ü–ö–ò –û–¢–í–ï–¢–ò–¢–¨');
        
        const submitBtn = document.getElementById('submit-answer');
        
        if (!submitBtn) {
            this.error('‚ùå –ö–Ω–æ–ø–∫–∞ submit-answer –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return false;
        }
        
        this.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', submitBtn);
        this.log('Disabled:', submitBtn.disabled);
        this.log('Style display:', submitBtn.style.display);
        this.log('Parent element:', submitBtn.parentElement);
        
        submitBtn.click();
        
        return true;
    }
}
